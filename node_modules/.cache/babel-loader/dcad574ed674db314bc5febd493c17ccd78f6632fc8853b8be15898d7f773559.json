{"ast":null,"code":"var _jsxFileName = \"/home/mars/Sync/GitHub/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Square from './Components/Square';\nimport { Patterns } from \"./Patterns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"X\");\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  });\n  const chooseSquare = square => {\n    setBoard(board.map((val, idx) => {\n      if (idx == square && val == \"\") {\n        return player;\n      }\n      return val;\n    }));\n    if (player == \"X\") {\n      setPlayer(\"O\");\n    } else {\n      setPlayer(\"X\");\n    }\n  };\n  const checkWin = () => {\n    Patterns.forEach(currPattern => {\n      const firstPlayer = board[pattern[0]];\n      if (firstPlayer == \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach(idx => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n      if (foundWinningPattern) {\n        setResult({\n          winner: player,\n          state: \"won\"\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[0],\n          chooseSquare: () => {\n            chooseSquare(0);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[1],\n          chooseSquare: () => {\n            chooseSquare(1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[2],\n          chooseSquare: () => {\n            chooseSquare(2);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[3],\n          chooseSquare: () => {\n            chooseSquare(3);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[4],\n          chooseSquare: () => {\n            chooseSquare(4);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[5],\n          chooseSquare: () => {\n            chooseSquare(5);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[6],\n          chooseSquare: () => {\n            chooseSquare(6);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[7],\n          chooseSquare: () => {\n            chooseSquare(7);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[8],\n          chooseSquare: () => {\n            chooseSquare(8);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kcycPuO6r0cONxVp/Ei6RJtiN7s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Square","Patterns","App","board","setBoard","player","setPlayer","result","setResult","winner","state","chooseSquare","square","map","val","idx","checkWin","forEach","currPattern","firstPlayer","pattern","foundWinningPattern"],"sources":["/home/mars/Sync/GitHub/tic-tac-toe/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport { useState, useEffect } from \"react\";\nimport Square from './Components/Square';\nimport { Patterns } from \"./Patterns\";\n\nfunction App() {\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"X\");\n  const [result, setResult] = useState({ winner: \"none\", state: \"none\" });\n\n  const chooseSquare = (square) => {\n    setBoard(board.map((val, idx) => {\n      if (idx == square && val == \"\") {\n        return player;\n      }\n\n      return val;\n    })\n    );\n\n    if (player == \"X\") {\n      setPlayer(\"O\");\n    } else {\n      setPlayer(\"X\");\n    }\n  };\n\n  const checkWin = () => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[pattern[0]];\n\n      if (firstPlayer == \"\") return;\n\n      let foundWinningPattern = true;\n      currPattern.forEach((idx) => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      })\n\n      if (foundWinningPattern) {\n        setResult({ winner: player, state: \"won\" });\n      }\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"board\">\n        <div className=\"row\">\n          <Square val={board[0]} chooseSquare={() => { chooseSquare(0) }} />\n          <Square val={board[1]} chooseSquare={() => { chooseSquare(1) }} />\n          <Square val={board[2]} chooseSquare={() => { chooseSquare(2) }} />\n        </div>\n        <div className=\"row\">\n          <Square val={board[3]} chooseSquare={() => { chooseSquare(3) }} />\n          <Square val={board[4]} chooseSquare={() => { chooseSquare(4) }} />\n          <Square val={board[5]} chooseSquare={() => { chooseSquare(5) }} />\n        </div>\n        <div className=\"row\">\n          <Square val={board[6]} chooseSquare={() => { chooseSquare(6) }} />\n          <Square val={board[7]} chooseSquare={() => { chooseSquare(7) }} />\n          <Square val={board[8]} chooseSquare={() => { chooseSquare(8) }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}